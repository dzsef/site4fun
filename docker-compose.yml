version: "3.9"

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10

  api:
    build: ./apps/api
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql+psycopg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      BACKEND_CORS_ORIGINS: ${BACKEND_CORS_ORIGINS}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_MINUTES: ${JWT_EXPIRES_MINUTES}
      ENV: ${ENV}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
    expose:
      - "8000"

  web:
    build: ./apps/web
    env_file: .env
    environment:
      VITE_API_BASE_URL: ${VITE_API_BASE_URL}
    volumes:
      - web_dist:/app/dist
    command: ["sh", "-c", "pnpm install --no-frozen-lockfile && pnpm build && tail -f /dev/null"]

  nginx:
    image: nginx:1.27-alpine
    depends_on:
      - api
      - web
    ports:
      - "80:80"
    volumes:
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - web_dist:/usr/share/nginx/html:ro

volumes:
  db_data:
  web_dist:
